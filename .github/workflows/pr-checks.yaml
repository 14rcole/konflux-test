# Copyright (c) 2022 Red Hat, Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: Validate PRs

on:
  pull_request:
    branches: [ main ]

jobs:
  YAML-Linter:
    runs-on: ubuntu-latest
    steps:
      - name: yaml-lint
        uses: ibiqlik/action-yamllint@v3
        with:
          file_or_dir: .

  Dockerfile-linter:
    name: Check Dockerfiles
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile
          ignore: DL3003,DL3013,DL3041,DL4006  # DL4006 seems broken
      - uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: clamav/Dockerfile
          ignore: DL3041
      - uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: clair-in-ci/Dockerfile
          ignore: DL3041

  container_image_main:
    name: Check main image build
    runs-on: ubuntu-latest
    steps:
      - name: Check out Docker file code in the root directory
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Check if dockerimage build is working
        run: docker build -f ./Dockerfile .

  container_image_clamdb:
    name: Check clam-db image build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install qemu dependency
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-user-static

      - name: Build-image
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: clam-db
          tags: pr-test
          archs: amd64,ppc64le
          containerfiles: |
            ./clamav/Dockerfile

  container_image_clair-in-ci-db:
    name: Check clair-in-ci-db image build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup docker for workflow
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"

      - name: Build-image
        id: build-image
        run: |
          docker build . -t clair-in-ci-db:pr-test -f ./clair-in-ci/Dockerfile

  conftest_integration_tests:
    name: Integration tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Integration test
        uses: ./ # Uses an action in the root directory
        id: test_image
        with:
          image: 'quay.io/redhat-appstudio/sample-image:test-index-pass'

  opa_policies_unittest:
    name: opa_policies_unittest
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependency packages
        run: |
         sudo apt-get install jq
         sudo curl -L -o /usr/bin/opa https://openpolicyagent.org/downloads/v0.39.0/opa_linux_amd64_static
         sudo chmod 755 /usr/bin/opa

      - name: Run unittests for policies
        run: |
          /usr/bin/opa test policies unittests unittests/test_data -c > /tmp/policy_unittest_result.json

      - name: Check unittests result
        run: |
          RESULT_PATH="/tmp/policy_unittest_result.json"
          if [ ! -f $RESULT_PATH ]; then
            echo "No unittest result exists, please check again"
            exit 1
          fi
          coverage=$(jq '.coverage' $RESULT_PATH)
          if [ $coverage == 100 ]; then
            echo "Congratulations! Unittests pass!"
            exit 0
          else
            echo "Ouch! Unittests fail! Please check details as below:"
            jq '.files | with_entries(.value |= (if (.coverage == '100') then (.coverage) else (.) end))' $RESULT_PATH
            exit 1
          fi
